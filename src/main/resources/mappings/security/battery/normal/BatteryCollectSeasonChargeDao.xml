<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cpit.cpmt.biz.dao.security.battery.normal.BatteryCollectSeasonChargeDao">
  <resultMap id="BaseResultMap" type="com.cpit.cpmt.dto.security.battery.normal.BatteryCollectSeasonCharge">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="operator_id" jdbcType="VARCHAR" property="operatorId" />
    <result column="station_id" jdbcType="VARCHAR" property="stationId" />
    <result column="equipment_id" jdbcType="VARCHAR" property="equipmentId" />
    <result column="connector_id" jdbcType="VARCHAR" property="connectorId" />
    <result column="bms_code" jdbcType="VARCHAR" property="bmsCode" />
    <result column="bms_ver" jdbcType="VARCHAR" property="bmsVer" />
    <result column="esti_r_last" jdbcType="INTEGER" property="estiRLast" />
    <result column="remain_capacity_sum" jdbcType="INTEGER" property="remainCapacitySum" />
    <result column="remain_capacity_last" jdbcType="INTEGER" property="remainCapacityLast" />
    <result column="charge_time_sum" jdbcType="INTEGER" property="chargeTimeSum" />
    <result column="charge_times_sum" jdbcType="INTEGER" property="chargeTimesSum" />
    <result column="charge_time_f" jdbcType="INTEGER" property="chargeTimeF" />
    <result column="charge_time_s" jdbcType="INTEGER" property="chargeTimeS" />
    <result column="sOH_sum" jdbcType="INTEGER" property="sohSum" />
    <result column="sOH_last" jdbcType="INTEGER" property="sohLast" />
    <result column="voltage_h" jdbcType="REAL" property="voltageH" />
    <result column="voltage_l" jdbcType="REAL" property="voltageL" />
    <result column="tatal_voltage_h" jdbcType="REAL" property="tatalVoltageH" />
    <result column="total_current_h" jdbcType="REAL" property="totalCurrentH" />
    <result column="tempture_h" jdbcType="INTEGER" property="temptureH" />
    <result column="tempture_l" jdbcType="INTEGER" property="temptureL" />
    <result column="before_soc_l" jdbcType="INTEGER" property="beforeSocL" />
    <result column="before_soc_sum" jdbcType="INTEGER" property="beforeSocSum" />
    <result column="after_soc_sum" jdbcType="INTEGER" property="afterSocSum" />
    <result column="after_soc_h" jdbcType="INTEGER" property="afterSocH" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="statistical_time" jdbcType="CHAR" property="statisticalTime" />
    <result column="statisticalTimes" jdbcType="INTEGER" property="statisticalTimes" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
  </resultMap>
  <select id="queryBatteryCollectSeason" resultMap="BaseResultMap">
  	select
	 a.operator_id,
	 a.station_id,
	 a.equipment_id,
	 a.connector_id,
	 a.bms_code,
	 b.sOH_last,
	 b.remain_capacity_last,
	 b.esti_r_last,
	 a.sOH_sum,
	 a.remain_capacity_sum,
	 a.charge_times_sum,
	 a.charge_time_sum,
	 a.charge_time_f,
	 a.charge_time_s,
	 a.tatal_voltage_h,
	 a.total_current_h,
	 a.voltage_h,
	 a.voltage_l,
	 a.tempture_h,
	 a.tempture_l,
	 a.before_soc_l,
	 a.before_soc_sum,
	 a.after_soc_h,
	 a.after_soc_sum,
	 a.end_time
 from 
  (SELECT
	 operator_id,
	 station_id,
	 equipment_id,
	 connector_id,
	 bms_code,
	 SUM(sOH_sum) as sOH_sum,
	 SUM(remain_capacity_sum) as remain_capacity_sum,
	 SUM(charge_times_sum) as charge_times_sum,
	 SUM(charge_time_sum) as charge_time_sum,
	 MIN(charge_time_f) as charge_time_f,
	 MAX(charge_time_s) as charge_time_s,
	 MAX(tatal_voltage_h) as tatal_voltage_h,
	 MAX(total_current_h) as total_current_h,
	 MAX(voltage_h) as voltage_h,
	 MIN(voltage_l) as voltage_l,
	 MAX(tempture_h) as tempture_h,
	 MIN(tempture_l) as tempture_l,
	 MIN(before_soc_l) as before_soc_l,
	 SUM(before_soc_sum) as before_soc_sum,
	 MAX(after_soc_h) as after_soc_h,
	 SUM(after_soc_sum) as after_soc_sum,
	 MAX(end_time) as end_time
FROM
 `sec_battery_collect_month_charge`
WHERE
	operator_id = #{operatorId,jdbcType=VARCHAR}
AND
  	statistical_time  between  #{startDate} and #{endDate}
GROUP BY
	 operator_id,
	 station_id,
	 equipment_id,
	 connector_id,
 	bms_code) as a , sec_battery_collect_month_charge b 
 	where a.end_time = b.end_time and a.operator_id= b.operator_id and a.connector_id = b.connector_id
 
  </select>
  <insert id="addBatchBatteryCollectSeason" parameterType="java.util.List">
  	INSERT INTO sec_battery_collect_season_charge
	 (
	 id,
	 operator_id,
	 station_id,
	 equipment_id,
	 connector_id,
	 bms_code,
	 sOH_last,
	 remain_capacity_last,
	 esti_r_last,
	 sOH_sum,
	 remain_capacity_sum,
	 charge_times_sum,
	 charge_time_sum,
	 charge_time_f,
	 charge_time_s,
	 tatal_voltage_h,
	 total_current_h,
	 voltage_h,
	 voltage_l,
	 tempture_h,
	 tempture_l,
	 before_soc_l,
	 before_soc_sum,
	 after_soc_h,
	 after_soc_sum,
	 end_time,
	 statistical_time,
	 in_time
  		)
	VALUES
 		<foreach collection="list" item="item" index="index" separator=",">
 			(   
 			#{item.id},
 			#{item.operatorId},
  			#{item.stationId},
  			#{item.equipmentId},
  			#{item.connectorId},
  			#{item.bmsCode},
  			#{item.sohLast},
  			#{item.remainCapacityLast},
  			#{item.estiRLast},
  			#{item.sohSum},
  			#{item.remainCapacitySum},
  			#{item.chargeTimesSum},
  			#{item.chargeTimeSum},
  			#{item.chargeTimeF},
  			#{item.chargeTimeS},
  			#{item.tatalVoltageH},
  			#{item.totalCurrentH},
  			#{item.voltageH},
  			#{item.voltageL},
  			#{item.temptureH},
  			#{item.temptureL},
  			#{item.beforeSocL},
  			#{item.beforeSocSum},
  			#{item.afterSocH},
  			#{item.afterSocSum},
  			#{item.endTime},
  			#{item.statisticalTime},
  			#{item.inTime}
 			) 
 		</foreach>
  	</insert>
   <!-- 第一级钻取 按季度粒度 -->
  <select id="queryFirstLevelData" resultMap="BaseResultMap" parameterType="com.cpit.cpmt.dto.security.battery.other.BatteryDataConditions">
  	SELECT
			bms_code,
			operator_id,
			station_id,
			equipment_id,
			connector_id,
			SUM(charge_times_sum) AS statisticalTimes,
			statistical_time
		FROM
			`sec_battery_collect_season_charge`
		<where>
			bms_code = #{param.bMSCode}
			AND statistical_time 
			BETWEEN 
			   #{param.startStatisticalTime}
			AND  
			   #{param.endStatisticalTime}
			<if test="param.allOperators==0"><!-- 表明运营商单选 -->
				AND operator_id = #{param.operatorId}
			</if>
			 <if test="param.allStations==0"><!-- 表明充电站单选 -->
				AND	station_id = #{param.stationId}	
			</if>
			<if test="param.allEquipments==0"><!-- 表明充电设备单选 -->
				AND equipment_id = #{param.equipmentId}
			</if>
		</where>
		GROUP BY
			bms_code,
			operator_id,
			station_id,
			equipment_id,
			connector_id,
			statistical_time
		ORDER BY statistical_time ASC
    </select>
   <select id="showBatterySeasonReport" parameterType="com.cpit.cpmt.dto.security.battery.other.BatteryDataConditions" resultMap="BaseResultMap">
  	select
	 b.operator_id,
	 b.station_id,
	 b.equipment_id,
	 a.bms_code,
	 b.sOH_last,
	 b.remain_capacity_last,
	 b.esti_r_last,
	 a.sOH_sum,
	 a.remain_capacity_sum,
	 a.charge_times_sum,
	 a.charge_time_sum,
	 a.charge_time_f,
	 a.charge_time_s,
	 a.tatal_voltage_h,
	 a.total_current_h,
	 a.voltage_h,
	 a.voltage_l,
	 a.tempture_h,
	 a.tempture_l,
	 a.before_soc_l,
	 a.before_soc_sum,
	 a.after_soc_h,
	 a.after_soc_sum,
	 a.end_time
 from 
  (SELECT
	 bms_code,
	 SUM(sOH_sum) as sOH_sum,
	 SUM(remain_capacity_sum) as remain_capacity_sum,
	 SUM(charge_times_sum) as charge_times_sum,
	 SUM(charge_time_sum) as charge_time_sum,
	 MIN(charge_time_f) as charge_time_f,
	 MAX(charge_time_s) as charge_time_s,
	 MAX(tatal_voltage_h) as tatal_voltage_h,
	 MAX(total_current_h) as total_current_h,
	 MAX(voltage_h) as voltage_h,
	 MIN(voltage_l) as voltage_l,
	 MAX(tempture_h) as tempture_h,
	 MIN(tempture_l) as tempture_l,
	 MIN(before_soc_l) as before_soc_l,
	 SUM(before_soc_sum) as before_soc_sum,
	 MAX(after_soc_h) as after_soc_h,
	 SUM(after_soc_sum) as after_soc_sum,
	 MAX(end_time) as end_time
FROM
 `sec_battery_collect_season_charge`
WHERE
  	statistical_time =#{statisticalTime} and bms_code=#{bMSCode}
<if test="allOperators==0 or allStations==0 or allEquipments==0">
	GROUP BY
	<if test="allOperators==0">
	 operator_id
	</if>
	<if test="allStations==0">
	 ,station_id
	</if>
	<if test="allEquipments==0">
	 ,equipment_id
	</if>
</if>
 	) as a , sec_battery_collect_season_charge b 
 	where a.end_time = b.end_time and a.bms_code= b.bms_code
 </select>
 <select id="queryReportBmsCodeListData" resultMap="BaseResultMap" parameterType="com.cpit.cpmt.dto.security.battery.other.BatteryDataConditions">
  	SELECT
			operator_id,
			station_id,
			equipment_id,
			<!-- connector_id, -->
			bms_code,
			statistical_time
		FROM
			sec_battery_collect_season_charge
		<where>
				statistical_time =#{param.statisticalTime}
			<if test="param.bMSCode!=null and param.bMSCode!=''"><!-- bmsCode -->
				AND bms_code = #{param.bMSCode}
			</if>
			<if test="param.allOperators==0"><!-- 表明运营商单选 -->
				AND operator_id = #{param.operatorId}
			</if>
			 <if test="param.allStations==0"><!-- 表明充电站单选 -->
				AND	station_id = #{param.stationId}	
			</if>
			<if test="param.allEquipments==0"><!-- 表明充电设备单选 -->
				AND equipment_id = #{param.equipmentId}
			</if>
		</where>
			AND bms_code is not null and bms_code !='' and bms_code !='0' and bms_code !='无' and bms_code !='暂无'
			ORDER BY statistical_time DESC
				
    </select>
</mapper>