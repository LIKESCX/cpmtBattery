<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cpit.cpmt.biz.dao.security.battery.normal.BatteryCollectWeekChargeDao">
  <resultMap id="BaseResultMap" type="com.cpit.cpmt.dto.security.battery.normal.BatteryCollectWeekCharge">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="operator_id" jdbcType="VARCHAR" property="operatorId" />
    <result column="station_id" jdbcType="VARCHAR" property="stationId" />
    <result column="equipment_id" jdbcType="VARCHAR" property="equipmentId" />
    <result column="connector_id" jdbcType="VARCHAR" property="connectorId" />
    <result column="bms_code" jdbcType="VARCHAR" property="bmsCode" />
    <result column="bms_ver" jdbcType="VARCHAR" property="bmsVer" />
    <result column="esti_r_last" jdbcType="INTEGER" property="estiRLast" />
    <result column="remain_capacity_sum" jdbcType="INTEGER" property="remainCapacitySum" />
    <result column="remain_capacity_last" jdbcType="INTEGER" property="remainCapacityLast" />
    <result column="charge_time_sum" jdbcType="INTEGER" property="chargeTimeSum" />
    <result column="charge_times_sum" jdbcType="INTEGER" property="chargeTimesSum" />
    <result column="charge_time_f" jdbcType="INTEGER" property="chargeTimeF" />
    <result column="charge_time_s" jdbcType="INTEGER" property="chargeTimeS" />
    <result column="sOH_sum" jdbcType="INTEGER" property="sohSum" />
    <result column="sOH_last" jdbcType="INTEGER" property="sohLast" />
    <result column="voltage_h" jdbcType="REAL" property="voltageH" />
    <result column="voltage_l" jdbcType="REAL" property="voltageL" />
    <result column="tatal_voltage_h" jdbcType="REAL" property="tatalVoltageH" />
    <result column="total_current_h" jdbcType="REAL" property="totalCurrentH" />
    <result column="tempture_h" jdbcType="INTEGER" property="temptureH" />
    <result column="tempture_l" jdbcType="INTEGER" property="temptureL" />
    <result column="before_soc_l" jdbcType="INTEGER" property="beforeSocL" />
    <result column="before_soc_sum" jdbcType="INTEGER" property="beforeSocSum" />
    <result column="after_soc_sum" jdbcType="INTEGER" property="afterSocSum" />
    <result column="after_soc_h" jdbcType="INTEGER" property="afterSocH" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="statisticalTimes" jdbcType="INTEGER" property="statisticalTimes" />
    <result column="statistical_time" jdbcType="DATE" property="statisticalTime" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
  </resultMap>
  <select id="queryBatteryCollectWeek" resultMap="BaseResultMap">
  	select
	 a.operator_id,
	 a.station_id,
	 a.equipment_id,
	 a.connector_id,
	 a.bms_code,
	 b.sOH_last,
	 b.remain_capacity_last,
	 b.esti_r_last,
	 a.sOH_sum,
	 a.remain_capacity_sum,
	 a.charge_times_sum,
	 a.charge_time_sum,
	 a.charge_time_f,
	 a.charge_time_s,
	 a.tatal_voltage_h,
	 a.total_current_h,
	 a.voltage_h,
	 a.voltage_l,
	 a.tempture_h,
	 a.tempture_l,
	 a.before_soc_l,
	 a.before_soc_sum,
	 a.after_soc_h,
	 a.after_soc_sum,
	 a.end_time
 from 
  (SELECT
	 operator_id,
	 station_id,
	 equipment_id,
	 connector_id,
	 bms_code,
	 SUM(sOH_sum) as sOH_sum,
	 SUM(remain_capacity_sum) as remain_capacity_sum,
	 SUM(charge_times_sum) as charge_times_sum,
	 SUM(charge_time_sum) as charge_time_sum,
	 MIN(charge_time_f) as charge_time_f,
	 MAX(charge_time_s) as charge_time_s,
	 MAX(tatal_voltage_h) as tatal_voltage_h,
	 MAX(total_current_h) as total_current_h,
	 MAX(voltage_h) as voltage_h,
	 MIN(voltage_l) as voltage_l,
	 MAX(tempture_h) as tempture_h,
	 MIN(tempture_l) as tempture_l,
	 MIN(before_soc_l) as before_soc_l,
	 SUM(before_soc_sum) as before_soc_sum,
	 MAX(after_soc_h) as after_soc_h,
	 SUM(after_soc_sum) as after_soc_sum,
	 MAX(end_time) as end_time
FROM
 `sec_battery_collect_day_charge`
WHERE
  	   operator_id = #{operatorId}
  	AND 
  	   statistical_time  between  DATE_FORMAT(#{startDate},'%Y-%m-%d') and DATE_FORMAT(#{endDate},'%Y-%m-%d')
GROUP BY
	 operator_id,
	 station_id,
	 equipment_id,
	 connector_id,
 	bms_code) as a , sec_battery_collect_day_charge b 
 	where a.end_time = b.end_time and a.operator_id= b.operator_id and a.connector_id = b.connector_id
 
  </select>
  <insert id="addBatchBatteryCollectWeek" parameterType="java.util.List">
  	INSERT INTO sec_battery_collect_week_charge
	 (
	 id,
	 operator_id,
	 station_id,
	 equipment_id,
	 connector_id,
	 bms_code,
	 sOH_last,
	 remain_capacity_last,
	 esti_r_last,
	 sOH_sum,
	 remain_capacity_sum,
	 charge_times_sum,
	 charge_time_sum,
	 charge_time_f,
	 charge_time_s,
	 tatal_voltage_h,
	 total_current_h,
	 voltage_h,
	 voltage_l,
	 tempture_h,
	 tempture_l,
	 before_soc_l,
	 before_soc_sum,
	 after_soc_h,
	 after_soc_sum,
	 end_time,
	 statistical_time,
	 in_time
  		)
	VALUES
 		<foreach collection="list" item="item" index="index" separator=",">
 			(   
 			#{item.id},
 			#{item.operatorId},
  			#{item.stationId},
  			#{item.equipmentId},
  			#{item.connectorId},
  			#{item.bmsCode},
  			#{item.sohLast},
  			#{item.remainCapacityLast},
  			#{item.estiRLast},
  			#{item.sohSum},
  			#{item.remainCapacitySum},
  			#{item.chargeTimesSum},
  			#{item.chargeTimeSum},
  			#{item.chargeTimeF},
  			#{item.chargeTimeS},
  			#{item.tatalVoltageH},
  			#{item.totalCurrentH},
  			#{item.voltageH},
  			#{item.voltageL},
  			#{item.temptureH},
  			#{item.temptureL},
  			#{item.beforeSocL},
  			#{item.beforeSocSum},
  			#{item.afterSocH},
  			#{item.afterSocSum},
  			#{item.endTime},
  			#{item.statisticalTime},
  			#{item.inTime}
 			) 
 		</foreach>
  	</insert>
  	<!-- 第一级钻取 按周粒度 -->
  <select id="queryFirstLevelData" resultMap="BaseResultMap" parameterType="com.cpit.cpmt.dto.security.battery.other.BatteryDataConditions">
  	SELECT
			bms_code,
			operator_id,
			station_id,
			equipment_id,
			connector_id,
			SUM(charge_times_sum) AS statisticalTimes,
			statistical_time
		FROM
			`sec_battery_collect_week_charge`
		<where>
			bms_code = #{param.bMSCode}
			AND	DATE_FORMAT(statistical_time, '%Y-%m-%d')
			BETWEEN DATE_FORMAT(
					#{param.startTime},
					'%Y-%m-%d'
				)
			AND  DATE_FORMAT(
				#{param.endTime},
				'%Y-%m-%d'
			)
			<if test="param.allOperators==0"><!-- 表明运营商单选 -->
				AND operator_id = #{param.operatorId}
			</if>
			 <if test="param.allStations==0"><!-- 表明充电站单选 -->
				AND	station_id = #{param.stationId}	
			</if>
			<if test="param.allEquipments==0"><!-- 表明充电设备单选 -->
				AND equipment_id = #{param.equipmentId}
			</if>
		</where>
		GROUP BY
			bms_code,
			operator_id,
			station_id,
			equipment_id,
			connector_id,
			DATE_FORMAT(statistical_time, '%Y-%m-%d')
		ORDER BY DATE_FORMAT(statistical_time, '%Y-%m-%d') ASC
    </select>
 <!--  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, operator_id, station_id, equipment_id, connector_id, bms_code, bms_ver, esti_r_last, 
    remain_capacity_sum, remain_capacity_last, charge_time_sum, charge_times_sum, charge_time_f, 
    charge_time_s, sOH_sum, sOH_last, voltage_h, voltage_l, tatal_voltage_h, total_current_h, 
    tempture_h, tempture_l, before_soc_l, before_soc_sum, after_soc_sum, after_soc_h, 
    end_time, statistical_time, in_time
  </sql>
  <select id="selectByExample" parameterType="com.cpit.cpmt.dto.security.battery.BatteryCollectWeekChargeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sec_battery_collect_week_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sec_battery_collect_week_charge
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sec_battery_collect_week_charge
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cpit.cpmt.dto.security.battery.BatteryCollectWeekChargeExample">
    delete from sec_battery_collect_week_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cpit.cpmt.dto.security.battery.BatteryCollectWeekCharge">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sec_battery_collect_week_charge (operator_id, station_id, equipment_id, 
      connector_id, bms_code, bms_ver, 
      esti_r_last, remain_capacity_sum, remain_capacity_last, 
      charge_time_sum, charge_times_sum, charge_time_f, 
      charge_time_s, sOH_sum, sOH_last, 
      voltage_h, voltage_l, tatal_voltage_h, 
      total_current_h, tempture_h, tempture_l, 
      before_soc_l, before_soc_sum, after_soc_sum, 
      after_soc_h, end_time, statistical_time, 
      in_time)
    values (#{operatorId,jdbcType=VARCHAR}, #{stationId,jdbcType=VARCHAR}, #{equipmentId,jdbcType=VARCHAR}, 
      #{connectorId,jdbcType=VARCHAR}, #{bmsCode,jdbcType=VARCHAR}, #{bmsVer,jdbcType=VARCHAR}, 
      #{estiRLast,jdbcType=INTEGER}, #{remainCapacitySum,jdbcType=INTEGER}, #{remainCapacityLast,jdbcType=INTEGER}, 
      #{chargeTimeSum,jdbcType=INTEGER}, #{chargeTimesSum,jdbcType=INTEGER}, #{chargeTimeF,jdbcType=INTEGER}, 
      #{chargeTimeS,jdbcType=INTEGER}, #{sohSum,jdbcType=INTEGER}, #{sohLast,jdbcType=INTEGER}, 
      #{voltageH,jdbcType=REAL}, #{voltageL,jdbcType=REAL}, #{tatalVoltageH,jdbcType=REAL}, 
      #{totalCurrentH,jdbcType=REAL}, #{temptureH,jdbcType=INTEGER}, #{temptureL,jdbcType=INTEGER}, 
      #{beforeSocL,jdbcType=INTEGER}, #{beforeSocSum,jdbcType=INTEGER}, #{afterSocSum,jdbcType=INTEGER}, 
      #{afterSocH,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, #{statisticalTime,jdbcType=DATE}, 
      #{inTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cpit.cpmt.dto.security.battery.BatteryCollectWeekCharge">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sec_battery_collect_week_charge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operatorId != null">
        operator_id,
      </if>
      <if test="stationId != null">
        station_id,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="connectorId != null">
        connector_id,
      </if>
      <if test="bmsCode != null">
        bms_code,
      </if>
      <if test="bmsVer != null">
        bms_ver,
      </if>
      <if test="estiRLast != null">
        esti_r_last,
      </if>
      <if test="remainCapacitySum != null">
        remain_capacity_sum,
      </if>
      <if test="remainCapacityLast != null">
        remain_capacity_last,
      </if>
      <if test="chargeTimeSum != null">
        charge_time_sum,
      </if>
      <if test="chargeTimesSum != null">
        charge_times_sum,
      </if>
      <if test="chargeTimeF != null">
        charge_time_f,
      </if>
      <if test="chargeTimeS != null">
        charge_time_s,
      </if>
      <if test="sohSum != null">
        sOH_sum,
      </if>
      <if test="sohLast != null">
        sOH_last,
      </if>
      <if test="voltageH != null">
        voltage_h,
      </if>
      <if test="voltageL != null">
        voltage_l,
      </if>
      <if test="tatalVoltageH != null">
        tatal_voltage_h,
      </if>
      <if test="totalCurrentH != null">
        total_current_h,
      </if>
      <if test="temptureH != null">
        tempture_h,
      </if>
      <if test="temptureL != null">
        tempture_l,
      </if>
      <if test="beforeSocL != null">
        before_soc_l,
      </if>
      <if test="beforeSocSum != null">
        before_soc_sum,
      </if>
      <if test="afterSocSum != null">
        after_soc_sum,
      </if>
      <if test="afterSocH != null">
        after_soc_h,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="statisticalTime != null">
        statistical_time,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operatorId != null">
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null">
        #{stationId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="connectorId != null">
        #{connectorId,jdbcType=VARCHAR},
      </if>
      <if test="bmsCode != null">
        #{bmsCode,jdbcType=VARCHAR},
      </if>
      <if test="bmsVer != null">
        #{bmsVer,jdbcType=VARCHAR},
      </if>
      <if test="estiRLast != null">
        #{estiRLast,jdbcType=INTEGER},
      </if>
      <if test="remainCapacitySum != null">
        #{remainCapacitySum,jdbcType=INTEGER},
      </if>
      <if test="remainCapacityLast != null">
        #{remainCapacityLast,jdbcType=INTEGER},
      </if>
      <if test="chargeTimeSum != null">
        #{chargeTimeSum,jdbcType=INTEGER},
      </if>
      <if test="chargeTimesSum != null">
        #{chargeTimesSum,jdbcType=INTEGER},
      </if>
      <if test="chargeTimeF != null">
        #{chargeTimeF,jdbcType=INTEGER},
      </if>
      <if test="chargeTimeS != null">
        #{chargeTimeS,jdbcType=INTEGER},
      </if>
      <if test="sohSum != null">
        #{sohSum,jdbcType=INTEGER},
      </if>
      <if test="sohLast != null">
        #{sohLast,jdbcType=INTEGER},
      </if>
      <if test="voltageH != null">
        #{voltageH,jdbcType=REAL},
      </if>
      <if test="voltageL != null">
        #{voltageL,jdbcType=REAL},
      </if>
      <if test="tatalVoltageH != null">
        #{tatalVoltageH,jdbcType=REAL},
      </if>
      <if test="totalCurrentH != null">
        #{totalCurrentH,jdbcType=REAL},
      </if>
      <if test="temptureH != null">
        #{temptureH,jdbcType=INTEGER},
      </if>
      <if test="temptureL != null">
        #{temptureL,jdbcType=INTEGER},
      </if>
      <if test="beforeSocL != null">
        #{beforeSocL,jdbcType=INTEGER},
      </if>
      <if test="beforeSocSum != null">
        #{beforeSocSum,jdbcType=INTEGER},
      </if>
      <if test="afterSocSum != null">
        #{afterSocSum,jdbcType=INTEGER},
      </if>
      <if test="afterSocH != null">
        #{afterSocH,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statisticalTime != null">
        #{statisticalTime,jdbcType=DATE},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cpit.cpmt.dto.security.battery.BatteryCollectWeekChargeExample" resultType="java.lang.Long">
    select count(*) from sec_battery_collect_week_charge
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sec_battery_collect_week_charge
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorId != null">
        operator_id = #{record.operatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.stationId != null">
        station_id = #{record.stationId,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.connectorId != null">
        connector_id = #{record.connectorId,jdbcType=VARCHAR},
      </if>
      <if test="record.bmsCode != null">
        bms_code = #{record.bmsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bmsVer != null">
        bms_ver = #{record.bmsVer,jdbcType=VARCHAR},
      </if>
      <if test="record.estiRLast != null">
        esti_r_last = #{record.estiRLast,jdbcType=INTEGER},
      </if>
      <if test="record.remainCapacitySum != null">
        remain_capacity_sum = #{record.remainCapacitySum,jdbcType=INTEGER},
      </if>
      <if test="record.remainCapacityLast != null">
        remain_capacity_last = #{record.remainCapacityLast,jdbcType=INTEGER},
      </if>
      <if test="record.chargeTimeSum != null">
        charge_time_sum = #{record.chargeTimeSum,jdbcType=INTEGER},
      </if>
      <if test="record.chargeTimesSum != null">
        charge_times_sum = #{record.chargeTimesSum,jdbcType=INTEGER},
      </if>
      <if test="record.chargeTimeF != null">
        charge_time_f = #{record.chargeTimeF,jdbcType=INTEGER},
      </if>
      <if test="record.chargeTimeS != null">
        charge_time_s = #{record.chargeTimeS,jdbcType=INTEGER},
      </if>
      <if test="record.sohSum != null">
        sOH_sum = #{record.sohSum,jdbcType=INTEGER},
      </if>
      <if test="record.sohLast != null">
        sOH_last = #{record.sohLast,jdbcType=INTEGER},
      </if>
      <if test="record.voltageH != null">
        voltage_h = #{record.voltageH,jdbcType=REAL},
      </if>
      <if test="record.voltageL != null">
        voltage_l = #{record.voltageL,jdbcType=REAL},
      </if>
      <if test="record.tatalVoltageH != null">
        tatal_voltage_h = #{record.tatalVoltageH,jdbcType=REAL},
      </if>
      <if test="record.totalCurrentH != null">
        total_current_h = #{record.totalCurrentH,jdbcType=REAL},
      </if>
      <if test="record.temptureH != null">
        tempture_h = #{record.temptureH,jdbcType=INTEGER},
      </if>
      <if test="record.temptureL != null">
        tempture_l = #{record.temptureL,jdbcType=INTEGER},
      </if>
      <if test="record.beforeSocL != null">
        before_soc_l = #{record.beforeSocL,jdbcType=INTEGER},
      </if>
      <if test="record.beforeSocSum != null">
        before_soc_sum = #{record.beforeSocSum,jdbcType=INTEGER},
      </if>
      <if test="record.afterSocSum != null">
        after_soc_sum = #{record.afterSocSum,jdbcType=INTEGER},
      </if>
      <if test="record.afterSocH != null">
        after_soc_h = #{record.afterSocH,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.statisticalTime != null">
        statistical_time = #{record.statisticalTime,jdbcType=DATE},
      </if>
      <if test="record.inTime != null">
        in_time = #{record.inTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sec_battery_collect_week_charge
    set id = #{record.id,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=VARCHAR},
      station_id = #{record.stationId,jdbcType=VARCHAR},
      equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      connector_id = #{record.connectorId,jdbcType=VARCHAR},
      bms_code = #{record.bmsCode,jdbcType=VARCHAR},
      bms_ver = #{record.bmsVer,jdbcType=VARCHAR},
      esti_r_last = #{record.estiRLast,jdbcType=INTEGER},
      remain_capacity_sum = #{record.remainCapacitySum,jdbcType=INTEGER},
      remain_capacity_last = #{record.remainCapacityLast,jdbcType=INTEGER},
      charge_time_sum = #{record.chargeTimeSum,jdbcType=INTEGER},
      charge_times_sum = #{record.chargeTimesSum,jdbcType=INTEGER},
      charge_time_f = #{record.chargeTimeF,jdbcType=INTEGER},
      charge_time_s = #{record.chargeTimeS,jdbcType=INTEGER},
      sOH_sum = #{record.sohSum,jdbcType=INTEGER},
      sOH_last = #{record.sohLast,jdbcType=INTEGER},
      voltage_h = #{record.voltageH,jdbcType=REAL},
      voltage_l = #{record.voltageL,jdbcType=REAL},
      tatal_voltage_h = #{record.tatalVoltageH,jdbcType=REAL},
      total_current_h = #{record.totalCurrentH,jdbcType=REAL},
      tempture_h = #{record.temptureH,jdbcType=INTEGER},
      tempture_l = #{record.temptureL,jdbcType=INTEGER},
      before_soc_l = #{record.beforeSocL,jdbcType=INTEGER},
      before_soc_sum = #{record.beforeSocSum,jdbcType=INTEGER},
      after_soc_sum = #{record.afterSocSum,jdbcType=INTEGER},
      after_soc_h = #{record.afterSocH,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      statistical_time = #{record.statisticalTime,jdbcType=DATE},
      in_time = #{record.inTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cpit.cpmt.dto.security.battery.BatteryCollectWeekCharge">
    update sec_battery_collect_week_charge
    <set>
      <if test="operatorId != null">
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null">
        station_id = #{stationId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="connectorId != null">
        connector_id = #{connectorId,jdbcType=VARCHAR},
      </if>
      <if test="bmsCode != null">
        bms_code = #{bmsCode,jdbcType=VARCHAR},
      </if>
      <if test="bmsVer != null">
        bms_ver = #{bmsVer,jdbcType=VARCHAR},
      </if>
      <if test="estiRLast != null">
        esti_r_last = #{estiRLast,jdbcType=INTEGER},
      </if>
      <if test="remainCapacitySum != null">
        remain_capacity_sum = #{remainCapacitySum,jdbcType=INTEGER},
      </if>
      <if test="remainCapacityLast != null">
        remain_capacity_last = #{remainCapacityLast,jdbcType=INTEGER},
      </if>
      <if test="chargeTimeSum != null">
        charge_time_sum = #{chargeTimeSum,jdbcType=INTEGER},
      </if>
      <if test="chargeTimesSum != null">
        charge_times_sum = #{chargeTimesSum,jdbcType=INTEGER},
      </if>
      <if test="chargeTimeF != null">
        charge_time_f = #{chargeTimeF,jdbcType=INTEGER},
      </if>
      <if test="chargeTimeS != null">
        charge_time_s = #{chargeTimeS,jdbcType=INTEGER},
      </if>
      <if test="sohSum != null">
        sOH_sum = #{sohSum,jdbcType=INTEGER},
      </if>
      <if test="sohLast != null">
        sOH_last = #{sohLast,jdbcType=INTEGER},
      </if>
      <if test="voltageH != null">
        voltage_h = #{voltageH,jdbcType=REAL},
      </if>
      <if test="voltageL != null">
        voltage_l = #{voltageL,jdbcType=REAL},
      </if>
      <if test="tatalVoltageH != null">
        tatal_voltage_h = #{tatalVoltageH,jdbcType=REAL},
      </if>
      <if test="totalCurrentH != null">
        total_current_h = #{totalCurrentH,jdbcType=REAL},
      </if>
      <if test="temptureH != null">
        tempture_h = #{temptureH,jdbcType=INTEGER},
      </if>
      <if test="temptureL != null">
        tempture_l = #{temptureL,jdbcType=INTEGER},
      </if>
      <if test="beforeSocL != null">
        before_soc_l = #{beforeSocL,jdbcType=INTEGER},
      </if>
      <if test="beforeSocSum != null">
        before_soc_sum = #{beforeSocSum,jdbcType=INTEGER},
      </if>
      <if test="afterSocSum != null">
        after_soc_sum = #{afterSocSum,jdbcType=INTEGER},
      </if>
      <if test="afterSocH != null">
        after_soc_h = #{afterSocH,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="statisticalTime != null">
        statistical_time = #{statisticalTime,jdbcType=DATE},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cpit.cpmt.dto.security.battery.BatteryCollectWeekCharge">
    update sec_battery_collect_week_charge
    set operator_id = #{operatorId,jdbcType=VARCHAR},
      station_id = #{stationId,jdbcType=VARCHAR},
      equipment_id = #{equipmentId,jdbcType=VARCHAR},
      connector_id = #{connectorId,jdbcType=VARCHAR},
      bms_code = #{bmsCode,jdbcType=VARCHAR},
      bms_ver = #{bmsVer,jdbcType=VARCHAR},
      esti_r_last = #{estiRLast,jdbcType=INTEGER},
      remain_capacity_sum = #{remainCapacitySum,jdbcType=INTEGER},
      remain_capacity_last = #{remainCapacityLast,jdbcType=INTEGER},
      charge_time_sum = #{chargeTimeSum,jdbcType=INTEGER},
      charge_times_sum = #{chargeTimesSum,jdbcType=INTEGER},
      charge_time_f = #{chargeTimeF,jdbcType=INTEGER},
      charge_time_s = #{chargeTimeS,jdbcType=INTEGER},
      sOH_sum = #{sohSum,jdbcType=INTEGER},
      sOH_last = #{sohLast,jdbcType=INTEGER},
      voltage_h = #{voltageH,jdbcType=REAL},
      voltage_l = #{voltageL,jdbcType=REAL},
      tatal_voltage_h = #{tatalVoltageH,jdbcType=REAL},
      total_current_h = #{totalCurrentH,jdbcType=REAL},
      tempture_h = #{temptureH,jdbcType=INTEGER},
      tempture_l = #{temptureL,jdbcType=INTEGER},
      before_soc_l = #{beforeSocL,jdbcType=INTEGER},
      before_soc_sum = #{beforeSocSum,jdbcType=INTEGER},
      after_soc_sum = #{afterSocSum,jdbcType=INTEGER},
      after_soc_h = #{afterSocH,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      statistical_time = #{statisticalTime,jdbcType=DATE},
      in_time = #{inTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update> -->
</mapper>